{
  "name": "override",
  "keywords": [],
  "description": "General purpose middleware framework for Node.js that lets you override and extend built in functionality",
  "version": "0.0.1",
  "author": {
    "name": "Oleg Podsechin",
    "email": "oleg@ionsquare.com"
  },
  "directories": {
    "lib": "."
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/olegp/override.git"
  },
  "main": "./lib/run.js",
  "bin": {
    "node-override": "./bin/node-override"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# Override\n\nOverride is a general purpose middleware framework for Node.js that lets you \noverride and extend built in functionality.\n\nOverride modules are executed in sequence before your main module is loaded, making \nit possible to run additional code on startup & modify built in prototypes and \nfunctions.\n\nFor example, Override modules make it possible to replace the built in `console.log` \nwith a version that sends the logs to a third party service, chroot the current process,\nenable profiling etc. etc.\n\n## Installation\n\nInstall `override` as a global package (use `sudo` if you're on Ubuntu or Mac):\n\n```bash\nnpm -g install override\n```\n\n## Usage\n\nTo run your app via `override` replace the call to `node` with `node-override` passing\nin your Override environment before the filename of your main module. So instead of `node index.js`, use \n`node-override -e or-mylog index.js` (first install the `or-mylog` Override module with `npm install or-mylog`). \n\n## Environments\n\nOverride environments are simply comma separated lists of Override package or module names. You may for example have different environments for development, staging and production.\n\nYou can avoid specifying the environment every time you run your app by setting the `OVERRIDE_ENV` environment variable.\n\nFor example on *nix you can do this with:\n\n```bash\nexport OVERRIDE_ENV=or-mylog,or-simple\n``` \n\n## Override Modules\n\nOverride modules have the following signature:\n\n```js\nmodule.exports = function(next) {\n  console.log('Hello Override!');\n  next();\n}\n```\n\nHere, the code outside of the exported function runs in a clean environment, before any overrides have had effect.\n\nThe exported function accepts a single parameter, which is the next function to call in the override middleware chain. \nThe middleware chain terminates with the loading of the app's main module. As such any calls after `next()` will take \nplace after the main module has been loaded. \n\nUse [environment variables](http://nodejs.org/api/process.html#process_process_env) to pass configuration parameters to your module.\nYou can specify the names and types of configuration parameters required by your Override module in its `package.json`.\nFor an example, check out [or-timeout/package.json](https://github.com/olegp/or-mylog/blob/master/package.json).\n\nOverride modules are distributed as packages via NPM. The convention is to prefix the name with `or-`. This \nmakes it easy to search for them on [http://search.npmjs.org](http://search.npmjs.org).\nThese existing open source modules make for great examples you can use as the basis for your own Override module.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012+ Oleg Podsechin\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/olegp/override/issues"
  },
  "_id": "override@0.0.1",
  "dist": {
    "shasum": "873c97c29a56265192d9ea71837f4cd780730633"
  },
  "_from": "override@",
  "_resolved": "https://registry.npmjs.org/override/-/override-0.0.1.tgz"
}
